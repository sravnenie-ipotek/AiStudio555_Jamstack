#!/usr/bin/env node

/**
 * URGENT FIX: Update Russian UI translations in production database
 * This script directly updates the home_pages table with proper Russian UI translations
 */

const { Pool } = require('pg');

// Load environment variables
require('dotenv').config({ path: '.env.local' });

const pool = new Pool({
  connectionString: process.env.DATABASE_URL || 'postgres://postgres:Thinkpad123@junction.proxy.rlwy.net:48608/railway',
  ssl: process.env.NODE_ENV === 'production' ? { rejectUnauthorized: false } : false
});

// Complete Russian UI translations
const RUSSIAN_UI_TRANSLATIONS = {
  navHome: '–ì–ª–∞–≤–Ω–∞—è',
  navCourses: '–ö—É—Ä—Å—ã',
  navTeachers: '–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏', 
  navBlog: '–ë–ª–æ–≥',
  navCareerCenter: '–ö–∞—Ä—å–µ—Ä–Ω—ã–π —Ü–µ–Ω—Ç—Ä',
  navAbout: '–û –Ω–∞—Å',
  navContact: '–ö–æ–Ω—Ç–∞–∫—Ç—ã',
  navPricing: '–¢–∞—Ä–∏—Ñ—ã',
  btnSignUpToday: '–ó–∞–ø–∏—Å–∞—Ç—å—Å—è —Å–µ–≥–æ–¥–Ω—è',
  btnLearnMore: '–£–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ',
  btnViewAllCourses: '–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ –∫—É—Ä—Å—ã',
  btnGetStarted: '–ù–∞—á–∞—Ç—å',
  btnContactUs: '–°–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏',
  btnEnrollNow: '–ó–∞–ø–∏—Å–∞—Ç—å—Å—è —Å–µ–π—á–∞—Å',
  btnStartLearning: '–ù–∞—á–∞—Ç—å –æ–±—É—á–µ–Ω–∏–µ',
  btnExploreCourses: '–ò–∑—É—á–∏—Ç—å –∫—É—Ä—Å—ã',
  btnViewDetails: '–ü–æ–¥—Ä–æ–±–Ω–µ–µ',
  btnBookConsultation: '–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é',
  btnDownloadBrochure: '–°–∫–∞—á–∞—Ç—å –±—Ä–æ—à—é—Ä—É',
  btnWatchDemo: '–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥–µ–º–æ',
  btnFreeTrial: '–ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è –ø—Ä–æ–±–Ω–∞—è –≤–µ—Ä—Å–∏—è',
  formLabelEmail: '–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –ø–æ—á—Ç–∞',
  formLabelName: '–ò–º—è',
  formLabelPhone: '–¢–µ–ª–µ—Ñ–æ–Ω',
  formLabelMessage: '–°–æ–æ–±—â–µ–Ω–∏–µ',
  formLabelSubject: '–¢–µ–º–∞',
  formPlaceholderEmail: '–í–≤–µ–¥–∏—Ç–µ –≤–∞—à email',
  formPlaceholderName: '–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è',
  formPlaceholderPhone: '–í–≤–µ–¥–∏—Ç–µ –≤–∞—à —Ç–µ–ª–µ—Ñ–æ–Ω',
  formPlaceholderMessage: '–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ',
  formBtnSubmit: '–û—Ç–ø—Ä–∞–≤–∏—Ç—å',
  formBtnSubscribe: '–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è',
  formBtnSend: '–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ',
  statsCoursesLabel: '–ö—É—Ä—Å—ã',
  statsLearnersLabel: '–°—Ç—É–¥–µ–Ω—Ç—ã',
  statsYearsLabel: '–õ–µ—Ç',
  statsSuccessRateLabel: '–£—Å–ø–µ—Ö–∞',
  statsCountriesLabel: '–°—Ç—Ä–∞–Ω—ã',
  statsInstructorsLabel: '–≠–∫—Å–ø–µ—Ä—Ç–æ–≤',
  msgLoading: '–ó–∞–≥—Ä—É–∑–∫–∞...',
  msgError: '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.',
  msgSuccess: '–£—Å–ø–µ—Ö!',
  msgFormSuccess: '–°–ø–∞—Å–∏–±–æ! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.',
  msgSubscribeSuccess: '–£—Å–ø–µ—à–Ω–æ –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ —Ä–∞—Å—Å—ã–ª–∫—É!',
  msgNoCourses: '–ö—É—Ä—Å—ã –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã',
  msgComingSoon: '–°–∫–æ—Ä–æ',
  msgEnrollmentClosed: '–ó–∞–ø–∏—Å—å –∑–∞–∫—Ä—ã—Ç–∞',
  msgLimitedSeats: '–û–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–µ—Å—Ç',
  uiSearchPlaceholder: '–ü–æ–∏—Å–∫ –∫—É—Ä—Å–æ–≤...',
  uiFilterAll: '–í—Å–µ',
  uiSortBy: '–°–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ',
  uiViewMode: '–í–∏–¥',
  uiGridView: '–°–µ—Ç–∫–∞',
  uiListView: '–°–ø–∏—Å–æ–∫',
  uiReadMore: '–ß–∏—Ç–∞—Ç—å –¥–∞–ª–µ–µ',
  uiShowLess: '–°–∫—Ä—ã—Ç—å',
  uiBackToTop: '–ù–∞–≤–µ—Ä—Ö',
  uiShare: '–ü–æ–¥–µ–ª–∏—Ç—å—Å—è',
  uiPrint: '–ü–µ—á–∞—Ç—å'
};

async function updateRussianUITranslations() {
  try {
    console.log('üîÑ Updating Russian UI translations...');
    
    // Build the SET clause dynamically
    const setClauses = [];
    const values = [];
    let paramIndex = 1;
    
    for (const [field, value] of Object.entries(RUSSIAN_UI_TRANSLATIONS)) {
      setClauses.push(`${field.toLowerCase().replace(/([A-Z])/g, '_$1')} = $${paramIndex}`);
      values.push(value);
      paramIndex++;
    }
    
    const query = `
      UPDATE home_pages 
      SET ${setClauses.join(', ')}, 
          updated_at = CURRENT_TIMESTAMP
      WHERE locale = 'ru'
    `;
    
    console.log('Executing query with', values.length, 'parameters...');
    
    const result = await pool.query(query, values);
    
    if (result.rowCount > 0) {
      console.log('‚úÖ Successfully updated Russian UI translations!');
      console.log('Rows affected:', result.rowCount);
      
      // Verify the update
      const verifyQuery = `
        SELECT nav_home, btn_sign_up_today, nav_courses 
        FROM home_pages 
        WHERE locale = 'ru'
      `;
      
      const verifyResult = await pool.query(verifyQuery);
      if (verifyResult.rows.length > 0) {
        console.log('üîç Verification - Sample Russian translations:');
        console.log('nav_home:', verifyResult.rows[0].nav_home);
        console.log('btn_sign_up_today:', verifyResult.rows[0].btn_sign_up_today);
        console.log('nav_courses:', verifyResult.rows[0].nav_courses);
      }
      
    } else {
      console.log('‚ö†Ô∏è No rows were updated. Russian home page record may not exist.');
    }
    
  } catch (error) {
    console.error('‚ùå Error updating Russian UI translations:', error);
  }
}

async function main() {
  try {
    await updateRussianUITranslations();
  } catch (error) {
    console.error('‚ùå Script failed:', error);
  } finally {
    await pool.end();
  }
}

main();