'use strict';

/**
 * home-page controller
 */

const { createCoreController } = require('@strapi/strapi').factories;

module.exports = createCoreController('api::home-page.home-page', ({ strapi }) => ({
  async find(ctx) {
    try {
      // For single types in Strapi v5, we use findFirst to get the single document
      const entity = await strapi.documents('api::home-page.home-page').findFirst({
        populate: ctx.query.populate || '*',
        locale: ctx.query.locale || 'en',
        status: ctx.query.status || 'published' // Default to published content
      });

      if (!entity) {
        return ctx.notFound('Home page not found');
      }

      // Return the data in the expected format
      return {
        data: entity,
        meta: {}
      };
    } catch (error) {
      strapi.log.error('Error fetching home page:', error);
      return ctx.badRequest('Error fetching home page');
    }
  },

  async update(ctx) {
    try {
      const { data } = ctx.request.body;
      
      // First, get the existing document to obtain its documentId
      const existingEntity = await strapi.documents('api::home-page.home-page').findFirst({
        locale: ctx.query.locale || 'en'
      });

      if (!existingEntity) {
        return ctx.notFound('Home page not found');
      }

      // Update the single type document using the documentId
      const entity = await strapi.documents('api::home-page.home-page').update({
        documentId: existingEntity.documentId,
        data: data,
        locale: ctx.query.locale || 'en',
        status: 'published' // Automatically publish the update
      });

      if (!entity) {
        return ctx.notFound('Home page not found after update');
      }

      return {
        data: entity,
        meta: {}
      };
    } catch (error) {
      strapi.log.error('Error updating home page:', error);
      return ctx.badRequest('Error updating home page');
    }
  }
}));