CREATE TABLE `strapi_migrations` (`id` integer not null primary key autoincrement, `name` varchar(255), `time` datetime);
CREATE TABLE sqlite_sequence(name,seq);
CREATE TABLE `strapi_migrations_internal` (`id` integer not null primary key autoincrement, `name` varchar(255), `time` datetime);
CREATE TABLE `strapi_database_schema` (`id` integer not null primary key autoincrement, `schema` json, `time` datetime, `hash` varchar(255));
CREATE TABLE `components_sections_faq_sections` (`id` integer not null primary key autoincrement, `title` varchar(255) null, `subtitle` varchar(255) null, `description` text null, `cta_button_text` varchar(255) null, `cta_button_link` varchar(255) null);
CREATE TABLE `strapi_core_store_settings` (`id` integer not null primary key autoincrement, `key` varchar(255) null, `value` text null, `type` varchar(255) null, `environment` varchar(255) null, `tag` varchar(255) null);
CREATE TABLE `strapi_webhooks` (`id` integer not null primary key autoincrement, `name` varchar(255) null, `url` text null, `headers` json null, `events` json null, `enabled` boolean null);
CREATE TABLE IF NOT EXISTS "files" (`id` integer PRIMARY KEY AUTOINCREMENT NOT NULL, `document_id` varchar(255) NULL, `name` varchar(255) NULL, `alternative_text` varchar(255) NULL, `caption` varchar(255) NULL, `width` integer NULL, `height` integer NULL, `formats` json NULL, `hash` varchar(255) NULL, `ext` varchar(255) NULL, `mime` varchar(255) NULL, `size` float NULL, `url` varchar(255) NULL, `preview_url` varchar(255) NULL, `provider` varchar(255) NULL, `provider_metadata` json NULL, `folder_path` varchar(255) NULL, `created_at` datetime NULL, `updated_at` datetime NULL, `published_at` datetime NULL, `created_by_id` integer NULL, `updated_by_id` integer NULL, `locale` varchar(255) NULL, CONSTRAINT `files_created_by_id_fk` FOREIGN KEY (`created_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL, CONSTRAINT `files_updated_by_id_fk` FOREIGN KEY (`updated_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL, CONSTRAINT `files_created_by_id_fk` FOREIGN KEY (`created_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL, CONSTRAINT `files_updated_by_id_fk` FOREIGN KEY (`updated_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL);
CREATE INDEX `upload_files_folder_path_index` on `files` (`folder_path`);
CREATE INDEX `upload_files_created_at_index` on `files` (`created_at`);
CREATE INDEX `upload_files_updated_at_index` on `files` (`updated_at`);
CREATE INDEX `upload_files_name_index` on `files` (`name`);
CREATE INDEX `upload_files_size_index` on `files` (`size`);
CREATE INDEX `upload_files_ext_index` on `files` (`ext`);
CREATE INDEX `files_documents_idx` on `files` (`document_id`, `locale`, `published_at`);
CREATE INDEX `files_created_by_id_fk` on `files` (`created_by_id`);
CREATE INDEX `files_updated_by_id_fk` on `files` (`updated_by_id`);
CREATE TABLE IF NOT EXISTS "upload_folders" (`id` integer PRIMARY KEY AUTOINCREMENT NOT NULL, `document_id` varchar(255) NULL, `name` varchar(255) NULL, `path_id` integer NULL, `path` varchar(255) NULL, `created_at` datetime NULL, `updated_at` datetime NULL, `published_at` datetime NULL, `created_by_id` integer NULL, `updated_by_id` integer NULL, `locale` varchar(255) NULL, CONSTRAINT `upload_folders_created_by_id_fk` FOREIGN KEY (`created_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL, CONSTRAINT `upload_folders_updated_by_id_fk` FOREIGN KEY (`updated_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL, CONSTRAINT `upload_folders_created_by_id_fk` FOREIGN KEY (`created_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL, CONSTRAINT `upload_folders_updated_by_id_fk` FOREIGN KEY (`updated_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL);
CREATE UNIQUE INDEX `upload_folders_path_id_index` on `upload_folders` (`path_id`);
CREATE UNIQUE INDEX `upload_folders_path_index` on `upload_folders` (`path`);
CREATE INDEX `upload_folders_documents_idx` on `upload_folders` (`document_id`, `locale`, `published_at`);
CREATE INDEX `upload_folders_created_by_id_fk` on `upload_folders` (`created_by_id`);
CREATE INDEX `upload_folders_updated_by_id_fk` on `upload_folders` (`updated_by_id`);
CREATE TABLE IF NOT EXISTS "i18n_locale" (`id` integer PRIMARY KEY AUTOINCREMENT NOT NULL, `document_id` varchar(255) NULL, `name` varchar(255) NULL, `code` varchar(255) NULL, `created_at` datetime NULL, `updated_at` datetime NULL, `published_at` datetime NULL, `created_by_id` integer NULL, `updated_by_id` integer NULL, `locale` varchar(255) NULL, CONSTRAINT `i18n_locale_created_by_id_fk` FOREIGN KEY (`created_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL, CONSTRAINT `i18n_locale_updated_by_id_fk` FOREIGN KEY (`updated_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL, CONSTRAINT `i18n_locale_created_by_id_fk` FOREIGN KEY (`created_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL, CONSTRAINT `i18n_locale_updated_by_id_fk` FOREIGN KEY (`updated_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL);
CREATE INDEX `i18n_locale_documents_idx` on `i18n_locale` (`document_id`, `locale`, `published_at`);
CREATE INDEX `i18n_locale_created_by_id_fk` on `i18n_locale` (`created_by_id`);
CREATE INDEX `i18n_locale_updated_by_id_fk` on `i18n_locale` (`updated_by_id`);
CREATE TABLE IF NOT EXISTS "strapi_releases" (`id` integer PRIMARY KEY AUTOINCREMENT NOT NULL, `document_id` varchar(255) NULL, `name` varchar(255) NULL, `released_at` datetime NULL, `scheduled_at` datetime NULL, `timezone` varchar(255) NULL, `status` varchar(255) NULL, `created_at` datetime NULL, `updated_at` datetime NULL, `published_at` datetime NULL, `created_by_id` integer NULL, `updated_by_id` integer NULL, `locale` varchar(255) NULL, CONSTRAINT `strapi_releases_created_by_id_fk` FOREIGN KEY (`created_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL, CONSTRAINT `strapi_releases_updated_by_id_fk` FOREIGN KEY (`updated_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL, CONSTRAINT `strapi_releases_created_by_id_fk` FOREIGN KEY (`created_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL, CONSTRAINT `strapi_releases_updated_by_id_fk` FOREIGN KEY (`updated_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL);
CREATE INDEX `strapi_releases_documents_idx` on `strapi_releases` (`document_id`, `locale`, `published_at`);
CREATE INDEX `strapi_releases_created_by_id_fk` on `strapi_releases` (`created_by_id`);
CREATE INDEX `strapi_releases_updated_by_id_fk` on `strapi_releases` (`updated_by_id`);
CREATE TABLE IF NOT EXISTS "strapi_release_actions" (`id` integer PRIMARY KEY AUTOINCREMENT NOT NULL, `document_id` varchar(255) NULL, `type` varchar(255) NULL, `content_type` varchar(255) NULL, `entry_document_id` varchar(255) NULL, `locale` varchar(255) NULL, `is_entry_valid` boolean NULL, `created_at` datetime NULL, `updated_at` datetime NULL, `published_at` datetime NULL, `created_by_id` integer NULL, `updated_by_id` integer NULL, CONSTRAINT `strapi_release_actions_created_by_id_fk` FOREIGN KEY (`created_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL, CONSTRAINT `strapi_release_actions_updated_by_id_fk` FOREIGN KEY (`updated_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL, CONSTRAINT `strapi_release_actions_created_by_id_fk` FOREIGN KEY (`created_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL, CONSTRAINT `strapi_release_actions_updated_by_id_fk` FOREIGN KEY (`updated_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL);
CREATE INDEX `strapi_release_actions_documents_idx` on `strapi_release_actions` (`document_id`, `locale`, `published_at`);
CREATE INDEX `strapi_release_actions_created_by_id_fk` on `strapi_release_actions` (`created_by_id`);
CREATE INDEX `strapi_release_actions_updated_by_id_fk` on `strapi_release_actions` (`updated_by_id`);
CREATE TABLE IF NOT EXISTS "strapi_workflows" (`id` integer PRIMARY KEY AUTOINCREMENT NOT NULL, `document_id` varchar(255) NULL, `name` varchar(255) NULL, `content_types` json NULL, `created_at` datetime NULL, `updated_at` datetime NULL, `published_at` datetime NULL, `created_by_id` integer NULL, `updated_by_id` integer NULL, `locale` varchar(255) NULL, CONSTRAINT `strapi_workflows_created_by_id_fk` FOREIGN KEY (`created_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL, CONSTRAINT `strapi_workflows_updated_by_id_fk` FOREIGN KEY (`updated_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL, CONSTRAINT `strapi_workflows_created_by_id_fk` FOREIGN KEY (`created_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL, CONSTRAINT `strapi_workflows_updated_by_id_fk` FOREIGN KEY (`updated_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL);
CREATE INDEX `strapi_workflows_documents_idx` on `strapi_workflows` (`document_id`, `locale`, `published_at`);
CREATE INDEX `strapi_workflows_created_by_id_fk` on `strapi_workflows` (`created_by_id`);
CREATE INDEX `strapi_workflows_updated_by_id_fk` on `strapi_workflows` (`updated_by_id`);
CREATE TABLE IF NOT EXISTS "strapi_workflows_stages" (`id` integer PRIMARY KEY AUTOINCREMENT NOT NULL, `document_id` varchar(255) NULL, `name` varchar(255) NULL, `color` varchar(255) NULL, `created_at` datetime NULL, `updated_at` datetime NULL, `published_at` datetime NULL, `created_by_id` integer NULL, `updated_by_id` integer NULL, `locale` varchar(255) NULL, CONSTRAINT `strapi_workflows_stages_created_by_id_fk` FOREIGN KEY (`created_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL, CONSTRAINT `strapi_workflows_stages_updated_by_id_fk` FOREIGN KEY (`updated_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL, CONSTRAINT `strapi_workflows_stages_created_by_id_fk` FOREIGN KEY (`created_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL, CONSTRAINT `strapi_workflows_stages_updated_by_id_fk` FOREIGN KEY (`updated_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL);
CREATE INDEX `strapi_workflows_stages_documents_idx` on `strapi_workflows_stages` (`document_id`, `locale`, `published_at`);
CREATE INDEX `strapi_workflows_stages_created_by_id_fk` on `strapi_workflows_stages` (`created_by_id`);
CREATE INDEX `strapi_workflows_stages_updated_by_id_fk` on `strapi_workflows_stages` (`updated_by_id`);
CREATE TABLE IF NOT EXISTS "up_permissions" (`id` integer PRIMARY KEY AUTOINCREMENT NOT NULL, `document_id` varchar(255) NULL, `action` varchar(255) NULL, `created_at` datetime NULL, `updated_at` datetime NULL, `published_at` datetime NULL, `created_by_id` integer NULL, `updated_by_id` integer NULL, `locale` varchar(255) NULL, CONSTRAINT `up_permissions_created_by_id_fk` FOREIGN KEY (`created_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL, CONSTRAINT `up_permissions_updated_by_id_fk` FOREIGN KEY (`updated_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL, CONSTRAINT `up_permissions_created_by_id_fk` FOREIGN KEY (`created_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL, CONSTRAINT `up_permissions_updated_by_id_fk` FOREIGN KEY (`updated_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL);
CREATE INDEX `up_permissions_documents_idx` on `up_permissions` (`document_id`, `locale`, `published_at`);
CREATE INDEX `up_permissions_created_by_id_fk` on `up_permissions` (`created_by_id`);
CREATE INDEX `up_permissions_updated_by_id_fk` on `up_permissions` (`updated_by_id`);
CREATE TABLE IF NOT EXISTS "up_roles" (`id` integer PRIMARY KEY AUTOINCREMENT NOT NULL, `document_id` varchar(255) NULL, `name` varchar(255) NULL, `description` varchar(255) NULL, `type` varchar(255) NULL, `created_at` datetime NULL, `updated_at` datetime NULL, `published_at` datetime NULL, `created_by_id` integer NULL, `updated_by_id` integer NULL, `locale` varchar(255) NULL, CONSTRAINT `up_roles_created_by_id_fk` FOREIGN KEY (`created_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL, CONSTRAINT `up_roles_updated_by_id_fk` FOREIGN KEY (`updated_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL, CONSTRAINT `up_roles_created_by_id_fk` FOREIGN KEY (`created_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL, CONSTRAINT `up_roles_updated_by_id_fk` FOREIGN KEY (`updated_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL);
CREATE INDEX `up_roles_documents_idx` on `up_roles` (`document_id`, `locale`, `published_at`);
CREATE INDEX `up_roles_created_by_id_fk` on `up_roles` (`created_by_id`);
CREATE INDEX `up_roles_updated_by_id_fk` on `up_roles` (`updated_by_id`);
CREATE TABLE IF NOT EXISTS "up_users" (`id` integer PRIMARY KEY AUTOINCREMENT NOT NULL, `document_id` varchar(255) NULL, `username` varchar(255) NULL, `email` varchar(255) NULL, `provider` varchar(255) NULL, `password` varchar(255) NULL, `reset_password_token` varchar(255) NULL, `confirmation_token` varchar(255) NULL, `confirmed` boolean NULL, `blocked` boolean NULL, `created_at` datetime NULL, `updated_at` datetime NULL, `published_at` datetime NULL, `created_by_id` integer NULL, `updated_by_id` integer NULL, `locale` varchar(255) NULL, CONSTRAINT `up_users_created_by_id_fk` FOREIGN KEY (`created_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL, CONSTRAINT `up_users_updated_by_id_fk` FOREIGN KEY (`updated_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL, CONSTRAINT `up_users_created_by_id_fk` FOREIGN KEY (`created_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL, CONSTRAINT `up_users_updated_by_id_fk` FOREIGN KEY (`updated_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL);
CREATE INDEX `up_users_documents_idx` on `up_users` (`document_id`, `locale`, `published_at`);
CREATE INDEX `up_users_created_by_id_fk` on `up_users` (`created_by_id`);
CREATE INDEX `up_users_updated_by_id_fk` on `up_users` (`updated_by_id`);
CREATE TABLE IF NOT EXISTS "admin_permissions" (`id` integer PRIMARY KEY AUTOINCREMENT NOT NULL, `document_id` varchar(255) NULL, `action` varchar(255) NULL, `action_parameters` json NULL, `subject` varchar(255) NULL, `properties` json NULL, `conditions` json NULL, `created_at` datetime NULL, `updated_at` datetime NULL, `published_at` datetime NULL, `created_by_id` integer NULL, `updated_by_id` integer NULL, `locale` varchar(255) NULL, CONSTRAINT `admin_permissions_created_by_id_fk` FOREIGN KEY (`created_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL, CONSTRAINT `admin_permissions_updated_by_id_fk` FOREIGN KEY (`updated_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL, CONSTRAINT `admin_permissions_created_by_id_fk` FOREIGN KEY (`created_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL, CONSTRAINT `admin_permissions_updated_by_id_fk` FOREIGN KEY (`updated_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL);
CREATE INDEX `admin_permissions_documents_idx` on `admin_permissions` (`document_id`, `locale`, `published_at`);
CREATE INDEX `admin_permissions_created_by_id_fk` on `admin_permissions` (`created_by_id`);
CREATE INDEX `admin_permissions_updated_by_id_fk` on `admin_permissions` (`updated_by_id`);
CREATE TABLE IF NOT EXISTS "admin_users" (`id` integer PRIMARY KEY AUTOINCREMENT NOT NULL, `document_id` varchar(255) NULL, `firstname` varchar(255) NULL, `lastname` varchar(255) NULL, `username` varchar(255) NULL, `email` varchar(255) NULL, `password` varchar(255) NULL, `reset_password_token` varchar(255) NULL, `registration_token` varchar(255) NULL, `is_active` boolean NULL, `blocked` boolean NULL, `prefered_language` varchar(255) NULL, `created_at` datetime NULL, `updated_at` datetime NULL, `published_at` datetime NULL, `created_by_id` integer NULL, `updated_by_id` integer NULL, `locale` varchar(255) NULL, CONSTRAINT `admin_users_created_by_id_fk` FOREIGN KEY (`created_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL, CONSTRAINT `admin_users_updated_by_id_fk` FOREIGN KEY (`updated_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL, CONSTRAINT `admin_users_created_by_id_fk` FOREIGN KEY (`created_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL, CONSTRAINT `admin_users_updated_by_id_fk` FOREIGN KEY (`updated_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL);
CREATE INDEX `admin_users_documents_idx` on `admin_users` (`document_id`, `locale`, `published_at`);
CREATE INDEX `admin_users_created_by_id_fk` on `admin_users` (`created_by_id`);
CREATE INDEX `admin_users_updated_by_id_fk` on `admin_users` (`updated_by_id`);
CREATE TABLE IF NOT EXISTS "admin_roles" (`id` integer PRIMARY KEY AUTOINCREMENT NOT NULL, `document_id` varchar(255) NULL, `name` varchar(255) NULL, `code` varchar(255) NULL, `description` varchar(255) NULL, `created_at` datetime NULL, `updated_at` datetime NULL, `published_at` datetime NULL, `created_by_id` integer NULL, `updated_by_id` integer NULL, `locale` varchar(255) NULL, CONSTRAINT `admin_roles_created_by_id_fk` FOREIGN KEY (`created_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL, CONSTRAINT `admin_roles_updated_by_id_fk` FOREIGN KEY (`updated_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL, CONSTRAINT `admin_roles_created_by_id_fk` FOREIGN KEY (`created_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL, CONSTRAINT `admin_roles_updated_by_id_fk` FOREIGN KEY (`updated_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL);
CREATE INDEX `admin_roles_documents_idx` on `admin_roles` (`document_id`, `locale`, `published_at`);
CREATE INDEX `admin_roles_created_by_id_fk` on `admin_roles` (`created_by_id`);
CREATE INDEX `admin_roles_updated_by_id_fk` on `admin_roles` (`updated_by_id`);
CREATE TABLE IF NOT EXISTS "strapi_api_tokens" (`id` integer PRIMARY KEY AUTOINCREMENT NOT NULL, `document_id` varchar(255) NULL, `name` varchar(255) NULL, `description` varchar(255) NULL, `type` varchar(255) NULL, `access_key` varchar(255) NULL, `encrypted_key` text NULL, `last_used_at` datetime NULL, `expires_at` datetime NULL, `lifespan` bigint NULL, `created_at` datetime NULL, `updated_at` datetime NULL, `published_at` datetime NULL, `created_by_id` integer NULL, `updated_by_id` integer NULL, `locale` varchar(255) NULL, CONSTRAINT `strapi_api_tokens_created_by_id_fk` FOREIGN KEY (`created_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL, CONSTRAINT `strapi_api_tokens_updated_by_id_fk` FOREIGN KEY (`updated_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL, CONSTRAINT `strapi_api_tokens_created_by_id_fk` FOREIGN KEY (`created_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL, CONSTRAINT `strapi_api_tokens_updated_by_id_fk` FOREIGN KEY (`updated_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL);
CREATE INDEX `strapi_api_tokens_documents_idx` on `strapi_api_tokens` (`document_id`, `locale`, `published_at`);
CREATE INDEX `strapi_api_tokens_created_by_id_fk` on `strapi_api_tokens` (`created_by_id`);
CREATE INDEX `strapi_api_tokens_updated_by_id_fk` on `strapi_api_tokens` (`updated_by_id`);
CREATE TABLE IF NOT EXISTS "strapi_api_token_permissions" (`id` integer PRIMARY KEY AUTOINCREMENT NOT NULL, `document_id` varchar(255) NULL, `action` varchar(255) NULL, `created_at` datetime NULL, `updated_at` datetime NULL, `published_at` datetime NULL, `created_by_id` integer NULL, `updated_by_id` integer NULL, `locale` varchar(255) NULL, CONSTRAINT `strapi_api_token_permissions_created_by_id_fk` FOREIGN KEY (`created_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL, CONSTRAINT `strapi_api_token_permissions_updated_by_id_fk` FOREIGN KEY (`updated_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL, CONSTRAINT `strapi_api_token_permissions_created_by_id_fk` FOREIGN KEY (`created_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL, CONSTRAINT `strapi_api_token_permissions_updated_by_id_fk` FOREIGN KEY (`updated_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL);
CREATE INDEX `strapi_api_token_permissions_documents_idx` on `strapi_api_token_permissions` (`document_id`, `locale`, `published_at`);
CREATE INDEX `strapi_api_token_permissions_created_by_id_fk` on `strapi_api_token_permissions` (`created_by_id`);
CREATE INDEX `strapi_api_token_permissions_updated_by_id_fk` on `strapi_api_token_permissions` (`updated_by_id`);
CREATE TABLE IF NOT EXISTS "strapi_transfer_tokens" (`id` integer PRIMARY KEY AUTOINCREMENT NOT NULL, `document_id` varchar(255) NULL, `name` varchar(255) NULL, `description` varchar(255) NULL, `access_key` varchar(255) NULL, `last_used_at` datetime NULL, `expires_at` datetime NULL, `lifespan` bigint NULL, `created_at` datetime NULL, `updated_at` datetime NULL, `published_at` datetime NULL, `created_by_id` integer NULL, `updated_by_id` integer NULL, `locale` varchar(255) NULL, CONSTRAINT `strapi_transfer_tokens_created_by_id_fk` FOREIGN KEY (`created_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL, CONSTRAINT `strapi_transfer_tokens_updated_by_id_fk` FOREIGN KEY (`updated_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL, CONSTRAINT `strapi_transfer_tokens_created_by_id_fk` FOREIGN KEY (`created_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL, CONSTRAINT `strapi_transfer_tokens_updated_by_id_fk` FOREIGN KEY (`updated_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL);
CREATE INDEX `strapi_transfer_tokens_documents_idx` on `strapi_transfer_tokens` (`document_id`, `locale`, `published_at`);
CREATE INDEX `strapi_transfer_tokens_created_by_id_fk` on `strapi_transfer_tokens` (`created_by_id`);
CREATE INDEX `strapi_transfer_tokens_updated_by_id_fk` on `strapi_transfer_tokens` (`updated_by_id`);
CREATE TABLE IF NOT EXISTS "strapi_transfer_token_permissions" (`id` integer PRIMARY KEY AUTOINCREMENT NOT NULL, `document_id` varchar(255) NULL, `action` varchar(255) NULL, `created_at` datetime NULL, `updated_at` datetime NULL, `published_at` datetime NULL, `created_by_id` integer NULL, `updated_by_id` integer NULL, `locale` varchar(255) NULL, CONSTRAINT `strapi_transfer_token_permissions_created_by_id_fk` FOREIGN KEY (`created_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL, CONSTRAINT `strapi_transfer_token_permissions_updated_by_id_fk` FOREIGN KEY (`updated_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL, CONSTRAINT `strapi_transfer_token_permissions_created_by_id_fk` FOREIGN KEY (`created_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL, CONSTRAINT `strapi_transfer_token_permissions_updated_by_id_fk` FOREIGN KEY (`updated_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL);
CREATE INDEX `strapi_transfer_token_permissions_documents_idx` on `strapi_transfer_token_permissions` (`document_id`, `locale`, `published_at`);
CREATE INDEX `strapi_transfer_token_permissions_created_by_id_fk` on `strapi_transfer_token_permissions` (`created_by_id`);
CREATE INDEX `strapi_transfer_token_permissions_updated_by_id_fk` on `strapi_transfer_token_permissions` (`updated_by_id`);
CREATE TABLE IF NOT EXISTS "components_sections_alumni_reviews_cmps" (`id` integer PRIMARY KEY AUTOINCREMENT NOT NULL, `entity_id` integer NULL, `cmp_id` integer NULL, `component_type` varchar(255) NULL, `field` varchar(255) NULL, `order` float NULL, CONSTRAINT `components_sections_alumni_reviews_entity_fk` FOREIGN KEY (`entity_id`) REFERENCES `components_sections_alumni_reviews` (`id`) ON DELETE CASCADE, CONSTRAINT `components_sections_alumni_reviews_entity_fk` FOREIGN KEY (`entity_id`) REFERENCES `components_sections_alumni_reviews` (`id`) ON DELETE CASCADE);
CREATE INDEX `components_sections_alumni_reviews_field_idx` on `components_sections_alumni_reviews_cmps` (`field`);
CREATE INDEX `components_sections_alumni_reviews_component_type_idx` on `components_sections_alumni_reviews_cmps` (`component_type`);
CREATE INDEX `components_sections_alumni_reviews_entity_fk` on `components_sections_alumni_reviews_cmps` (`entity_id`);
CREATE UNIQUE INDEX `components_sections_alumni_reviews_uq` on `components_sections_alumni_reviews_cmps` (`entity_id`, `cmp_id`, `field`, `component_type`);
CREATE TABLE IF NOT EXISTS "strapi_history_versions" (`id` integer PRIMARY KEY AUTOINCREMENT NOT NULL, `content_type` varchar(255) NOT NULL, `related_document_id` varchar(255) NULL, `locale` varchar(255) NULL, `status` varchar(255) NULL, `data` json NULL, `schema` json NULL, `created_at` datetime NULL, `created_by_id` integer NULL, CONSTRAINT `strapi_history_versions_created_by_id_fk` FOREIGN KEY (`created_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL, CONSTRAINT `strapi_history_versions_created_by_id_fk` FOREIGN KEY (`created_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL);
CREATE INDEX `strapi_history_versions_created_by_id_fk` on `strapi_history_versions` (`created_by_id`);
CREATE TABLE IF NOT EXISTS "files_related_mph" (`id` integer PRIMARY KEY AUTOINCREMENT NOT NULL, `file_id` integer NULL, `related_id` integer NULL, `related_type` varchar(255) NULL, `field` varchar(255) NULL, `order` float NULL, CONSTRAINT `files_related_mph_fk` FOREIGN KEY (`file_id`) REFERENCES `files` (`id`) ON DELETE CASCADE, CONSTRAINT `files_related_mph_fk` FOREIGN KEY (`file_id`) REFERENCES `files` (`id`) ON DELETE CASCADE);
CREATE INDEX `files_related_mph_fk` on `files_related_mph` (`file_id`);
CREATE INDEX `files_related_mph_oidx` on `files_related_mph` (`order`);
CREATE INDEX `files_related_mph_idix` on `files_related_mph` (`related_id`);
CREATE TABLE IF NOT EXISTS "files_folder_lnk" (`id` integer PRIMARY KEY AUTOINCREMENT NOT NULL, `file_id` integer NULL, `folder_id` integer NULL, `file_ord` float NULL, CONSTRAINT `files_folder_lnk_fk` FOREIGN KEY (`file_id`) REFERENCES `files` (`id`) ON DELETE CASCADE, CONSTRAINT `files_folder_lnk_ifk` FOREIGN KEY (`folder_id`) REFERENCES `upload_folders` (`id`) ON DELETE CASCADE, CONSTRAINT `files_folder_lnk_fk` FOREIGN KEY (`file_id`) REFERENCES `files` (`id`) ON DELETE CASCADE, CONSTRAINT `files_folder_lnk_ifk` FOREIGN KEY (`folder_id`) REFERENCES `upload_folders` (`id`) ON DELETE CASCADE);
CREATE INDEX `files_folder_lnk_fk` on `files_folder_lnk` (`file_id`);
CREATE INDEX `files_folder_lnk_ifk` on `files_folder_lnk` (`folder_id`);
CREATE UNIQUE INDEX `files_folder_lnk_uq` on `files_folder_lnk` (`file_id`, `folder_id`);
CREATE INDEX `files_folder_lnk_oifk` on `files_folder_lnk` (`file_ord`);
CREATE TABLE IF NOT EXISTS "upload_folders_parent_lnk" (`id` integer PRIMARY KEY AUTOINCREMENT NOT NULL, `folder_id` integer NULL, `inv_folder_id` integer NULL, `folder_ord` float NULL, CONSTRAINT `upload_folders_parent_lnk_fk` FOREIGN KEY (`folder_id`) REFERENCES `upload_folders` (`id`) ON DELETE CASCADE, CONSTRAINT `upload_folders_parent_lnk_ifk` FOREIGN KEY (`inv_folder_id`) REFERENCES `upload_folders` (`id`) ON DELETE CASCADE, CONSTRAINT `upload_folders_parent_lnk_fk` FOREIGN KEY (`folder_id`) REFERENCES `upload_folders` (`id`) ON DELETE CASCADE, CONSTRAINT `upload_folders_parent_lnk_ifk` FOREIGN KEY (`inv_folder_id`) REFERENCES `upload_folders` (`id`) ON DELETE CASCADE);
CREATE INDEX `upload_folders_parent_lnk_fk` on `upload_folders_parent_lnk` (`folder_id`);
CREATE INDEX `upload_folders_parent_lnk_ifk` on `upload_folders_parent_lnk` (`inv_folder_id`);
CREATE UNIQUE INDEX `upload_folders_parent_lnk_uq` on `upload_folders_parent_lnk` (`folder_id`, `inv_folder_id`);
CREATE INDEX `upload_folders_parent_lnk_oifk` on `upload_folders_parent_lnk` (`folder_ord`);
CREATE TABLE IF NOT EXISTS "strapi_release_actions_release_lnk" (`id` integer PRIMARY KEY AUTOINCREMENT NOT NULL, `release_action_id` integer NULL, `release_id` integer NULL, `release_action_ord` float NULL, CONSTRAINT `strapi_release_actions_release_lnk_fk` FOREIGN KEY (`release_action_id`) REFERENCES `strapi_release_actions` (`id`) ON DELETE CASCADE, CONSTRAINT `strapi_release_actions_release_lnk_ifk` FOREIGN KEY (`release_id`) REFERENCES `strapi_releases` (`id`) ON DELETE CASCADE, CONSTRAINT `strapi_release_actions_release_lnk_fk` FOREIGN KEY (`release_action_id`) REFERENCES `strapi_release_actions` (`id`) ON DELETE CASCADE, CONSTRAINT `strapi_release_actions_release_lnk_ifk` FOREIGN KEY (`release_id`) REFERENCES `strapi_releases` (`id`) ON DELETE CASCADE);
CREATE INDEX `strapi_release_actions_release_lnk_fk` on `strapi_release_actions_release_lnk` (`release_action_id`);
CREATE INDEX `strapi_release_actions_release_lnk_ifk` on `strapi_release_actions_release_lnk` (`release_id`);
CREATE UNIQUE INDEX `strapi_release_actions_release_lnk_uq` on `strapi_release_actions_release_lnk` (`release_action_id`, `release_id`);
CREATE INDEX `strapi_release_actions_release_lnk_oifk` on `strapi_release_actions_release_lnk` (`release_action_ord`);
CREATE TABLE IF NOT EXISTS "strapi_workflows_stage_required_to_publish_lnk" (`id` integer PRIMARY KEY AUTOINCREMENT NOT NULL, `workflow_id` integer NULL, `workflow_stage_id` integer NULL, CONSTRAINT `strapi_workflows_stage_required_to_publish_lnk_fk` FOREIGN KEY (`workflow_id`) REFERENCES `strapi_workflows` (`id`) ON DELETE CASCADE, CONSTRAINT `strapi_workflows_stage_required_to_publish_lnk_ifk` FOREIGN KEY (`workflow_stage_id`) REFERENCES `strapi_workflows_stages` (`id`) ON DELETE CASCADE, CONSTRAINT `strapi_workflows_stage_required_to_publish_lnk_fk` FOREIGN KEY (`workflow_id`) REFERENCES `strapi_workflows` (`id`) ON DELETE CASCADE, CONSTRAINT `strapi_workflows_stage_required_to_publish_lnk_ifk` FOREIGN KEY (`workflow_stage_id`) REFERENCES `strapi_workflows_stages` (`id`) ON DELETE CASCADE);
CREATE INDEX `strapi_workflows_stage_required_to_publish_lnk_fk` on `strapi_workflows_stage_required_to_publish_lnk` (`workflow_id`);
CREATE INDEX `strapi_workflows_stage_required_to_publish_lnk_ifk` on `strapi_workflows_stage_required_to_publish_lnk` (`workflow_stage_id`);
CREATE UNIQUE INDEX `strapi_workflows_stage_required_to_publish_lnk_uq` on `strapi_workflows_stage_required_to_publish_lnk` (`workflow_id`, `workflow_stage_id`);
CREATE TABLE IF NOT EXISTS "strapi_workflows_stages_workflow_lnk" (`id` integer PRIMARY KEY AUTOINCREMENT NOT NULL, `workflow_stage_id` integer NULL, `workflow_id` integer NULL, `workflow_stage_ord` float NULL, CONSTRAINT `strapi_workflows_stages_workflow_lnk_fk` FOREIGN KEY (`workflow_stage_id`) REFERENCES `strapi_workflows_stages` (`id`) ON DELETE CASCADE, CONSTRAINT `strapi_workflows_stages_workflow_lnk_ifk` FOREIGN KEY (`workflow_id`) REFERENCES `strapi_workflows` (`id`) ON DELETE CASCADE, CONSTRAINT `strapi_workflows_stages_workflow_lnk_fk` FOREIGN KEY (`workflow_stage_id`) REFERENCES `strapi_workflows_stages` (`id`) ON DELETE CASCADE, CONSTRAINT `strapi_workflows_stages_workflow_lnk_ifk` FOREIGN KEY (`workflow_id`) REFERENCES `strapi_workflows` (`id`) ON DELETE CASCADE);
CREATE INDEX `strapi_workflows_stages_workflow_lnk_fk` on `strapi_workflows_stages_workflow_lnk` (`workflow_stage_id`);
CREATE INDEX `strapi_workflows_stages_workflow_lnk_ifk` on `strapi_workflows_stages_workflow_lnk` (`workflow_id`);
CREATE UNIQUE INDEX `strapi_workflows_stages_workflow_lnk_uq` on `strapi_workflows_stages_workflow_lnk` (`workflow_stage_id`, `workflow_id`);
CREATE INDEX `strapi_workflows_stages_workflow_lnk_oifk` on `strapi_workflows_stages_workflow_lnk` (`workflow_stage_ord`);
CREATE TABLE IF NOT EXISTS "strapi_workflows_stages_permissions_lnk" (`id` integer PRIMARY KEY AUTOINCREMENT NOT NULL, `workflow_stage_id` integer NULL, `permission_id` integer NULL, `permission_ord` float NULL, CONSTRAINT `strapi_workflows_stages_permissions_lnk_fk` FOREIGN KEY (`workflow_stage_id`) REFERENCES `strapi_workflows_stages` (`id`) ON DELETE CASCADE, CONSTRAINT `strapi_workflows_stages_permissions_lnk_ifk` FOREIGN KEY (`permission_id`) REFERENCES `admin_permissions` (`id`) ON DELETE CASCADE, CONSTRAINT `strapi_workflows_stages_permissions_lnk_fk` FOREIGN KEY (`workflow_stage_id`) REFERENCES `strapi_workflows_stages` (`id`) ON DELETE CASCADE, CONSTRAINT `strapi_workflows_stages_permissions_lnk_ifk` FOREIGN KEY (`permission_id`) REFERENCES `admin_permissions` (`id`) ON DELETE CASCADE);
CREATE INDEX `strapi_workflows_stages_permissions_lnk_fk` on `strapi_workflows_stages_permissions_lnk` (`workflow_stage_id`);
CREATE INDEX `strapi_workflows_stages_permissions_lnk_ifk` on `strapi_workflows_stages_permissions_lnk` (`permission_id`);
CREATE UNIQUE INDEX `strapi_workflows_stages_permissions_lnk_uq` on `strapi_workflows_stages_permissions_lnk` (`workflow_stage_id`, `permission_id`);
CREATE INDEX `strapi_workflows_stages_permissions_lnk_ofk` on `strapi_workflows_stages_permissions_lnk` (`permission_ord`);
CREATE TABLE IF NOT EXISTS "up_permissions_role_lnk" (`id` integer PRIMARY KEY AUTOINCREMENT NOT NULL, `permission_id` integer NULL, `role_id` integer NULL, `permission_ord` float NULL, CONSTRAINT `up_permissions_role_lnk_fk` FOREIGN KEY (`permission_id`) REFERENCES `up_permissions` (`id`) ON DELETE CASCADE, CONSTRAINT `up_permissions_role_lnk_ifk` FOREIGN KEY (`role_id`) REFERENCES `up_roles` (`id`) ON DELETE CASCADE, CONSTRAINT `up_permissions_role_lnk_fk` FOREIGN KEY (`permission_id`) REFERENCES `up_permissions` (`id`) ON DELETE CASCADE, CONSTRAINT `up_permissions_role_lnk_ifk` FOREIGN KEY (`role_id`) REFERENCES `up_roles` (`id`) ON DELETE CASCADE);
CREATE INDEX `up_permissions_role_lnk_fk` on `up_permissions_role_lnk` (`permission_id`);
CREATE INDEX `up_permissions_role_lnk_ifk` on `up_permissions_role_lnk` (`role_id`);
CREATE UNIQUE INDEX `up_permissions_role_lnk_uq` on `up_permissions_role_lnk` (`permission_id`, `role_id`);
CREATE INDEX `up_permissions_role_lnk_oifk` on `up_permissions_role_lnk` (`permission_ord`);
CREATE TABLE IF NOT EXISTS "up_users_role_lnk" (`id` integer PRIMARY KEY AUTOINCREMENT NOT NULL, `user_id` integer NULL, `role_id` integer NULL, `user_ord` float NULL, CONSTRAINT `up_users_role_lnk_fk` FOREIGN KEY (`user_id`) REFERENCES `up_users` (`id`) ON DELETE CASCADE, CONSTRAINT `up_users_role_lnk_ifk` FOREIGN KEY (`role_id`) REFERENCES `up_roles` (`id`) ON DELETE CASCADE, CONSTRAINT `up_users_role_lnk_fk` FOREIGN KEY (`user_id`) REFERENCES `up_users` (`id`) ON DELETE CASCADE, CONSTRAINT `up_users_role_lnk_ifk` FOREIGN KEY (`role_id`) REFERENCES `up_roles` (`id`) ON DELETE CASCADE);
CREATE INDEX `up_users_role_lnk_fk` on `up_users_role_lnk` (`user_id`);
CREATE INDEX `up_users_role_lnk_ifk` on `up_users_role_lnk` (`role_id`);
CREATE UNIQUE INDEX `up_users_role_lnk_uq` on `up_users_role_lnk` (`user_id`, `role_id`);
CREATE INDEX `up_users_role_lnk_oifk` on `up_users_role_lnk` (`user_ord`);
CREATE TABLE IF NOT EXISTS "admin_permissions_role_lnk" (`id` integer PRIMARY KEY AUTOINCREMENT NOT NULL, `permission_id` integer NULL, `role_id` integer NULL, `permission_ord` float NULL, CONSTRAINT `admin_permissions_role_lnk_fk` FOREIGN KEY (`permission_id`) REFERENCES `admin_permissions` (`id`) ON DELETE CASCADE, CONSTRAINT `admin_permissions_role_lnk_ifk` FOREIGN KEY (`role_id`) REFERENCES `admin_roles` (`id`) ON DELETE CASCADE, CONSTRAINT `admin_permissions_role_lnk_fk` FOREIGN KEY (`permission_id`) REFERENCES `admin_permissions` (`id`) ON DELETE CASCADE, CONSTRAINT `admin_permissions_role_lnk_ifk` FOREIGN KEY (`role_id`) REFERENCES `admin_roles` (`id`) ON DELETE CASCADE);
CREATE INDEX `admin_permissions_role_lnk_fk` on `admin_permissions_role_lnk` (`permission_id`);
CREATE INDEX `admin_permissions_role_lnk_ifk` on `admin_permissions_role_lnk` (`role_id`);
CREATE UNIQUE INDEX `admin_permissions_role_lnk_uq` on `admin_permissions_role_lnk` (`permission_id`, `role_id`);
CREATE INDEX `admin_permissions_role_lnk_oifk` on `admin_permissions_role_lnk` (`permission_ord`);
CREATE TABLE IF NOT EXISTS "admin_users_roles_lnk" (`id` integer PRIMARY KEY AUTOINCREMENT NOT NULL, `user_id` integer NULL, `role_id` integer NULL, `role_ord` float NULL, `user_ord` float NULL, CONSTRAINT `admin_users_roles_lnk_fk` FOREIGN KEY (`user_id`) REFERENCES `admin_users` (`id`) ON DELETE CASCADE, CONSTRAINT `admin_users_roles_lnk_ifk` FOREIGN KEY (`role_id`) REFERENCES `admin_roles` (`id`) ON DELETE CASCADE, CONSTRAINT `admin_users_roles_lnk_fk` FOREIGN KEY (`user_id`) REFERENCES `admin_users` (`id`) ON DELETE CASCADE, CONSTRAINT `admin_users_roles_lnk_ifk` FOREIGN KEY (`role_id`) REFERENCES `admin_roles` (`id`) ON DELETE CASCADE);
CREATE INDEX `admin_users_roles_lnk_fk` on `admin_users_roles_lnk` (`user_id`);
CREATE INDEX `admin_users_roles_lnk_ifk` on `admin_users_roles_lnk` (`role_id`);
CREATE UNIQUE INDEX `admin_users_roles_lnk_uq` on `admin_users_roles_lnk` (`user_id`, `role_id`);
CREATE INDEX `admin_users_roles_lnk_ofk` on `admin_users_roles_lnk` (`role_ord`);
CREATE INDEX `admin_users_roles_lnk_oifk` on `admin_users_roles_lnk` (`user_ord`);
CREATE TABLE IF NOT EXISTS "strapi_api_token_permissions_token_lnk" (`id` integer PRIMARY KEY AUTOINCREMENT NOT NULL, `api_token_permission_id` integer NULL, `api_token_id` integer NULL, `api_token_permission_ord` float NULL, CONSTRAINT `strapi_api_token_permissions_token_lnk_fk` FOREIGN KEY (`api_token_permission_id`) REFERENCES `strapi_api_token_permissions` (`id`) ON DELETE CASCADE, CONSTRAINT `strapi_api_token_permissions_token_lnk_ifk` FOREIGN KEY (`api_token_id`) REFERENCES `strapi_api_tokens` (`id`) ON DELETE CASCADE, CONSTRAINT `strapi_api_token_permissions_token_lnk_fk` FOREIGN KEY (`api_token_permission_id`) REFERENCES `strapi_api_token_permissions` (`id`) ON DELETE CASCADE, CONSTRAINT `strapi_api_token_permissions_token_lnk_ifk` FOREIGN KEY (`api_token_id`) REFERENCES `strapi_api_tokens` (`id`) ON DELETE CASCADE);
CREATE INDEX `strapi_api_token_permissions_token_lnk_fk` on `strapi_api_token_permissions_token_lnk` (`api_token_permission_id`);
CREATE INDEX `strapi_api_token_permissions_token_lnk_ifk` on `strapi_api_token_permissions_token_lnk` (`api_token_id`);
CREATE UNIQUE INDEX `strapi_api_token_permissions_token_lnk_uq` on `strapi_api_token_permissions_token_lnk` (`api_token_permission_id`, `api_token_id`);
CREATE INDEX `strapi_api_token_permissions_token_lnk_oifk` on `strapi_api_token_permissions_token_lnk` (`api_token_permission_ord`);
CREATE TABLE IF NOT EXISTS "strapi_transfer_token_permissions_token_lnk" (`id` integer PRIMARY KEY AUTOINCREMENT NOT NULL, `transfer_token_permission_id` integer NULL, `transfer_token_id` integer NULL, `transfer_token_permission_ord` float NULL, CONSTRAINT `strapi_transfer_token_permissions_token_lnk_fk` FOREIGN KEY (`transfer_token_permission_id`) REFERENCES `strapi_transfer_token_permissions` (`id`) ON DELETE CASCADE, CONSTRAINT `strapi_transfer_token_permissions_token_lnk_ifk` FOREIGN KEY (`transfer_token_id`) REFERENCES `strapi_transfer_tokens` (`id`) ON DELETE CASCADE, CONSTRAINT `strapi_transfer_token_permissions_token_lnk_fk` FOREIGN KEY (`transfer_token_permission_id`) REFERENCES `strapi_transfer_token_permissions` (`id`) ON DELETE CASCADE, CONSTRAINT `strapi_transfer_token_permissions_token_lnk_ifk` FOREIGN KEY (`transfer_token_id`) REFERENCES `strapi_transfer_tokens` (`id`) ON DELETE CASCADE);
CREATE INDEX `strapi_transfer_token_permissions_token_lnk_fk` on `strapi_transfer_token_permissions_token_lnk` (`transfer_token_permission_id`);
CREATE INDEX `strapi_transfer_token_permissions_token_lnk_ifk` on `strapi_transfer_token_permissions_token_lnk` (`transfer_token_id`);
CREATE UNIQUE INDEX `strapi_transfer_token_permissions_token_lnk_uq` on `strapi_transfer_token_permissions_token_lnk` (`transfer_token_permission_id`, `transfer_token_id`);
CREATE INDEX `strapi_transfer_token_permissions_token_lnk_oifk` on `strapi_transfer_token_permissions_token_lnk` (`transfer_token_permission_ord`);
CREATE TABLE IF NOT EXISTS "components_sections_hero_banners" (`id` integer PRIMARY KEY AUTOINCREMENT NOT NULL, `title` varchar(255) NULL, `subtitle` varchar(255) NULL, `description` text NULL, `primary_button_text` varchar(255) null, `primary_button_link` varchar(255) null, `secondary_button_text` varchar(255) null, `secondary_button_link` varchar(255) null);
CREATE TABLE IF NOT EXISTS "home_pages" (`id` integer PRIMARY KEY AUTOINCREMENT NOT NULL, `document_id` varchar(255) NULL, `hero_section_visible` boolean NULL, `created_at` datetime NULL, `updated_at` datetime NULL, `published_at` datetime NULL, `created_by_id` integer NULL, `updated_by_id` integer NULL, `locale` varchar(255) NULL, `title` varchar(255) NULL, `hero_title` varchar(255) NULL, `hero_subtitle` varchar(255) NULL, `featured_courses_title` varchar(255), `featured_courses_description` text, `featured_courses_visible` boolean, `about_title` varchar(255), `about_subtitle` varchar(255), `about_visible` boolean, `companies_title` varchar(255), `companies_description` text, `companies_visible` boolean, `course_1_title` varchar(255) null, `course_1_rating` varchar(255) null, `course_1_lessons` varchar(255) null, `course_1_duration` varchar(255) null, `course_1_category` varchar(255) null, `course_1_visible` boolean null, `course_2_title` varchar(255) null, `course_2_rating` varchar(255) null, `course_2_lessons` varchar(255) null, `course_2_duration` varchar(255) null, `course_2_category` varchar(255) null, `course_2_visible` boolean null, `course_3_title` varchar(255) null, `course_3_rating` varchar(255) null, `course_3_lessons` varchar(255) null, `course_3_duration` varchar(255) null, `course_3_category` varchar(255) null, `course_3_visible` boolean null, `course_4_title` varchar(255) null, `course_4_rating` varchar(255) null, `course_4_lessons` varchar(255) null, `course_4_duration` varchar(255) null, `course_4_category` varchar(255) null, `course_4_visible` boolean null, `course_5_title` varchar(255) null, `course_5_rating` varchar(255) null, `course_5_lessons` varchar(255) null, `course_5_duration` varchar(255) null, `course_5_category` varchar(255) null, `course_5_visible` boolean null, `course_6_title` varchar(255) null, `course_6_rating` varchar(255) null, `course_6_lessons` varchar(255) null, `course_6_duration` varchar(255) null, `course_6_category` varchar(255) null, `course_6_visible` boolean null, `testimonial_1_text` text null, `testimonial_1_author` varchar(255) null, `testimonial_1_rating` varchar(255) null, `testimonial_1_visible` boolean null, `testimonial_2_text` text null, `testimonial_2_author` varchar(255) null, `testimonial_2_rating` varchar(255) null, `testimonial_2_visible` boolean null, `testimonial_3_text` text null, `testimonial_3_author` varchar(255) null, `testimonial_3_rating` varchar(255) null, `testimonial_3_visible` boolean null, `testimonial_4_text` text null, `testimonial_4_author` varchar(255) null, `testimonial_4_rating` varchar(255) null, `testimonial_4_visible` boolean null, `testimonials_title` varchar(255) null, `testimonials_subtitle` text null, `testimonials_visible` boolean null, course1_title TEXT DEFAULT 'Complete React Development Course', course1_rating TEXT DEFAULT '4.9', course1_lessons TEXT DEFAULT '48 Lessons', course1_duration TEXT DEFAULT '12 Weeks', course1_category TEXT DEFAULT 'Web Dev', course1_visible BOOLEAN DEFAULT 1, course2_title TEXT DEFAULT 'Python for Data Science & AI', course2_rating TEXT DEFAULT '5.0', course2_lessons TEXT DEFAULT '60 Lessons', course2_duration TEXT DEFAULT '16 Weeks', course2_category TEXT DEFAULT 'Data Science', course2_visible BOOLEAN DEFAULT 1, course3_title TEXT DEFAULT 'Mobile App Development', course3_rating TEXT DEFAULT '4.8', course3_lessons TEXT DEFAULT '52 Lessons', course3_duration TEXT DEFAULT '14 Weeks', course3_category TEXT DEFAULT 'Mobile', course3_visible BOOLEAN DEFAULT 1, course4_title TEXT DEFAULT 'Cloud Computing & DevOps', course4_rating TEXT DEFAULT '4.7', course4_lessons TEXT DEFAULT '44 Lessons', course4_duration TEXT DEFAULT '10 Weeks', course4_category TEXT DEFAULT 'Cloud', course4_visible BOOLEAN DEFAULT 1, course5_title TEXT DEFAULT 'Machine Learning Fundamentals', course5_rating TEXT DEFAULT '4.9', course5_lessons TEXT DEFAULT '56 Lessons', course5_duration TEXT DEFAULT '18 Weeks', course5_category TEXT DEFAULT 'AI/ML', course5_visible BOOLEAN DEFAULT 1, course6_title TEXT DEFAULT 'DevOps Engineering', course6_rating TEXT DEFAULT '4.8', course6_lessons TEXT DEFAULT '50 Lessons', course6_duration TEXT DEFAULT '12 Weeks', course6_category TEXT DEFAULT 'DevOps', course6_visible BOOLEAN DEFAULT 1, testimonial1_text TEXT DEFAULT 'Completed the Android Development course. It was very convenient that it was held online. The material is presented clearly and structured. Practice-oriented approach helped me land a job immediately after graduation.', testimonial1_author TEXT DEFAULT 'Vyacheslav', testimonial1_rating TEXT DEFAULT '5.0', testimonial1_visible BOOLEAN DEFAULT 1, testimonial2_text TEXT DEFAULT 'Finished Data Science training. Instructor Maxim Stepanovich is excellent. Great presentation of complex topics, always ready to help with questions. The course gave me practical skills I use daily at work.', testimonial2_author TEXT DEFAULT 'Alexander', testimonial2_rating TEXT DEFAULT '5.0', testimonial2_visible BOOLEAN DEFAULT 1, testimonial3_text TEXT DEFAULT 'Completed JavaScript automation course and I''m very satisfied! The material is presented clearly and comprehensively. Real-world projects helped me build an impressive portfolio that helped me get hired.', testimonial3_author TEXT DEFAULT 'Igor Truhanovich', testimonial3_rating TEXT DEFAULT '5.0', testimonial3_visible BOOLEAN DEFAULT 1, testimonial4_text TEXT DEFAULT 'The UX/UI Design course exceeded my expectations! From zero knowledge to landing my dream job in just 5 months. The instructors are industry professionals who really care about your success.', testimonial4_author TEXT DEFAULT 'Maria Petrova', testimonial4_rating TEXT DEFAULT '5.0', testimonial4_visible BOOLEAN DEFAULT 1, `hero_description` text null, `about_description` text null, `course_1_description` text null, CONSTRAINT `home_pages_created_by_id_fk` FOREIGN KEY (`created_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL, CONSTRAINT `home_pages_updated_by_id_fk` FOREIGN KEY (`updated_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL, CONSTRAINT `home_pages_created_by_id_fk` FOREIGN KEY (`created_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL, CONSTRAINT `home_pages_updated_by_id_fk` FOREIGN KEY (`updated_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL);
CREATE INDEX `home_pages_documents_idx` on `home_pages` (`document_id`, `locale`, `published_at`);
CREATE INDEX `home_pages_created_by_id_fk` on `home_pages` (`created_by_id`);
CREATE INDEX `home_pages_updated_by_id_fk` on `home_pages` (`updated_by_id`);
CREATE TABLE `components_shared_seos` (`id` integer not null primary key autoincrement, `meta_title` varchar(255) null, `meta_description` text null, `meta_keywords` text null, `canonical_url` varchar(255) null);
CREATE TABLE `components_shared_meta_socials` (`id` integer not null primary key autoincrement, `social_network` varchar(255) null, `title` varchar(255) null, `description` text null);
CREATE TABLE `components_shared_lessons` (`id` integer not null primary key autoincrement, `title` varchar(255) null, `duration` integer null, `video_url` varchar(255) null);
CREATE TABLE `components_shared_learning_outcomes` (`id` integer not null primary key autoincrement, `outcome` varchar(255) null);
CREATE TABLE `components_shared_course_modules` (`id` integer not null primary key autoincrement, `title` varchar(255) null, `description` text null);
CREATE TABLE `components_sections_practice_focus` (`id` integer not null primary key autoincrement, `title` varchar(255) null, `subtitle` varchar(255) null, `description` text null, `practice_percentage` integer null, `theory_percentage` integer null, `job_support_percentage` integer null);
CREATE TABLE `components_sections_online_learning` (`id` integer not null primary key autoincrement, `title` varchar(255) null, `subtitle` varchar(255) null, `description` text null, `total_courses` varchar(255) null, `total_learners` varchar(255) null, `years_experience` varchar(255) null, `instructor_name` varchar(255) null, `instructor_title` varchar(255) null, `instructor_bio` text null, `achievements` text null);
CREATE TABLE IF NOT EXISTS "faqs" (`id` integer PRIMARY KEY AUTOINCREMENT NOT NULL, `document_id` varchar(255) NULL, `question` varchar(255) NULL, `answer` text NULL, `category` varchar(255) NULL, `order` integer NULL, `active` boolean NULL, `created_at` datetime NULL, `updated_at` datetime NULL, `published_at` datetime NULL, `created_by_id` integer NULL, `updated_by_id` integer NULL, `locale` varchar(255) NULL, CONSTRAINT `faqs_created_by_id_fk` FOREIGN KEY (`created_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL, CONSTRAINT `faqs_updated_by_id_fk` FOREIGN KEY (`updated_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL, CONSTRAINT `faqs_created_by_id_fk` FOREIGN KEY (`created_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL, CONSTRAINT `faqs_updated_by_id_fk` FOREIGN KEY (`updated_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL);
CREATE INDEX `faqs_documents_idx` on `faqs` (`document_id`, `locale`, `published_at`);
CREATE INDEX `faqs_created_by_id_fk` on `faqs` (`created_by_id`);
CREATE INDEX `faqs_updated_by_id_fk` on `faqs` (`updated_by_id`);
CREATE TABLE IF NOT EXISTS "page_sections" (`id` integer PRIMARY KEY AUTOINCREMENT NOT NULL, `document_id` varchar(255) NULL, `page_name` varchar(255) NULL, `section_id` varchar(255) NULL, `section_name` varchar(255) NULL, `content` text NULL, `heading` varchar(255) NULL, `subheading` varchar(255) NULL, `button_text` varchar(255) NULL, `button_url` varchar(255) NULL, `image_url` varchar(255) NULL, `is_visible` boolean NULL, `order` integer NULL, `metadata` json NULL, `pending_approval` boolean NULL, `requested_at` datetime NULL, `approved_at` datetime NULL, `version_history` json NULL, `locked_at` datetime NULL, `seo_title` varchar(255) NULL, `seo_description` text NULL, `created_at` datetime NULL, `updated_at` datetime NULL, `published_at` datetime NULL, `created_by_id` integer NULL, `updated_by_id` integer NULL, `locale` varchar(255) NULL, CONSTRAINT `page_sections_created_by_id_fk` FOREIGN KEY (`created_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL, CONSTRAINT `page_sections_updated_by_id_fk` FOREIGN KEY (`updated_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL, CONSTRAINT `page_sections_created_by_id_fk` FOREIGN KEY (`created_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL, CONSTRAINT `page_sections_updated_by_id_fk` FOREIGN KEY (`updated_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL);
CREATE INDEX `page_sections_documents_idx` on `page_sections` (`document_id`, `locale`, `published_at`);
CREATE INDEX `page_sections_created_by_id_fk` on `page_sections` (`created_by_id`);
CREATE INDEX `page_sections_updated_by_id_fk` on `page_sections` (`updated_by_id`);
CREATE TABLE IF NOT EXISTS "components_shared_seos_cmps" (`id` integer PRIMARY KEY AUTOINCREMENT NOT NULL, `entity_id` integer NULL, `cmp_id` integer NULL, `component_type` varchar(255) NULL, `field` varchar(255) NULL, `order` float NULL, CONSTRAINT `components_shared_seos_entity_fk` FOREIGN KEY (`entity_id`) REFERENCES `components_shared_seos` (`id`) ON DELETE CASCADE, CONSTRAINT `components_shared_seos_entity_fk` FOREIGN KEY (`entity_id`) REFERENCES `components_shared_seos` (`id`) ON DELETE CASCADE);
CREATE INDEX `components_shared_seos_field_idx` on `components_shared_seos_cmps` (`field`);
CREATE INDEX `components_shared_seos_component_type_idx` on `components_shared_seos_cmps` (`component_type`);
CREATE INDEX `components_shared_seos_entity_fk` on `components_shared_seos_cmps` (`entity_id`);
CREATE UNIQUE INDEX `components_shared_seos_uq` on `components_shared_seos_cmps` (`entity_id`, `cmp_id`, `field`, `component_type`);
CREATE TABLE IF NOT EXISTS "components_shared_course_modules_cmps" (`id` integer PRIMARY KEY AUTOINCREMENT NOT NULL, `entity_id` integer NULL, `cmp_id` integer NULL, `component_type` varchar(255) NULL, `field` varchar(255) NULL, `order` float NULL, CONSTRAINT `components_shared_course_modules_entity_fk` FOREIGN KEY (`entity_id`) REFERENCES `components_shared_course_modules` (`id`) ON DELETE CASCADE, CONSTRAINT `components_shared_course_modules_entity_fk` FOREIGN KEY (`entity_id`) REFERENCES `components_shared_course_modules` (`id`) ON DELETE CASCADE);
CREATE INDEX `components_shared_course_modules_field_idx` on `components_shared_course_modules_cmps` (`field`);
CREATE INDEX `components_shared_course_modules_component_type_idx` on `components_shared_course_modules_cmps` (`component_type`);
CREATE INDEX `components_shared_course_modules_entity_fk` on `components_shared_course_modules_cmps` (`entity_id`);
CREATE UNIQUE INDEX `components_shared_course_modules_uq` on `components_shared_course_modules_cmps` (`entity_id`, `cmp_id`, `field`, `component_type`);
CREATE TABLE IF NOT EXISTS "components_sections_practice_focus_cmps" (`id` integer PRIMARY KEY AUTOINCREMENT NOT NULL, `entity_id` integer NULL, `cmp_id` integer NULL, `component_type` varchar(255) NULL, `field` varchar(255) NULL, `order` float NULL, CONSTRAINT `components_sections_practice_focus_entity_fk` FOREIGN KEY (`entity_id`) REFERENCES `components_sections_practice_focus` (`id`) ON DELETE CASCADE, CONSTRAINT `components_sections_practice_focus_entity_fk` FOREIGN KEY (`entity_id`) REFERENCES `components_sections_practice_focus` (`id`) ON DELETE CASCADE);
CREATE INDEX `components_sections_practice_focus_field_idx` on `components_sections_practice_focus_cmps` (`field`);
CREATE INDEX `components_sections_practice_focus_component_type_idx` on `components_sections_practice_focus_cmps` (`component_type`);
CREATE INDEX `components_sections_practice_focus_entity_fk` on `components_sections_practice_focus_cmps` (`entity_id`);
CREATE UNIQUE INDEX `components_sections_practice_focus_uq` on `components_sections_practice_focus_cmps` (`entity_id`, `cmp_id`, `field`, `component_type`);
CREATE TABLE IF NOT EXISTS "page_sections_requested_by_lnk" (`id` integer PRIMARY KEY AUTOINCREMENT NOT NULL, `page_section_id` integer NULL, `user_id` integer NULL, CONSTRAINT `page_sections_requested_by_lnk_fk` FOREIGN KEY (`page_section_id`) REFERENCES `page_sections` (`id`) ON DELETE CASCADE, CONSTRAINT `page_sections_requested_by_lnk_ifk` FOREIGN KEY (`user_id`) REFERENCES `admin_users` (`id`) ON DELETE CASCADE, CONSTRAINT `page_sections_requested_by_lnk_fk` FOREIGN KEY (`page_section_id`) REFERENCES `page_sections` (`id`) ON DELETE CASCADE, CONSTRAINT `page_sections_requested_by_lnk_ifk` FOREIGN KEY (`user_id`) REFERENCES `admin_users` (`id`) ON DELETE CASCADE);
CREATE INDEX `page_sections_requested_by_lnk_fk` on `page_sections_requested_by_lnk` (`page_section_id`);
CREATE INDEX `page_sections_requested_by_lnk_ifk` on `page_sections_requested_by_lnk` (`user_id`);
CREATE UNIQUE INDEX `page_sections_requested_by_lnk_uq` on `page_sections_requested_by_lnk` (`page_section_id`, `user_id`);
CREATE TABLE IF NOT EXISTS "page_sections_approved_by_lnk" (`id` integer PRIMARY KEY AUTOINCREMENT NOT NULL, `page_section_id` integer NULL, `user_id` integer NULL, CONSTRAINT `page_sections_approved_by_lnk_fk` FOREIGN KEY (`page_section_id`) REFERENCES `page_sections` (`id`) ON DELETE CASCADE, CONSTRAINT `page_sections_approved_by_lnk_ifk` FOREIGN KEY (`user_id`) REFERENCES `admin_users` (`id`) ON DELETE CASCADE, CONSTRAINT `page_sections_approved_by_lnk_fk` FOREIGN KEY (`page_section_id`) REFERENCES `page_sections` (`id`) ON DELETE CASCADE, CONSTRAINT `page_sections_approved_by_lnk_ifk` FOREIGN KEY (`user_id`) REFERENCES `admin_users` (`id`) ON DELETE CASCADE);
CREATE INDEX `page_sections_approved_by_lnk_fk` on `page_sections_approved_by_lnk` (`page_section_id`);
CREATE INDEX `page_sections_approved_by_lnk_ifk` on `page_sections_approved_by_lnk` (`user_id`);
CREATE UNIQUE INDEX `page_sections_approved_by_lnk_uq` on `page_sections_approved_by_lnk` (`page_section_id`, `user_id`);
CREATE TABLE IF NOT EXISTS "page_sections_locked_by_lnk" (`id` integer PRIMARY KEY AUTOINCREMENT NOT NULL, `page_section_id` integer NULL, `user_id` integer NULL, CONSTRAINT `page_sections_locked_by_lnk_fk` FOREIGN KEY (`page_section_id`) REFERENCES `page_sections` (`id`) ON DELETE CASCADE, CONSTRAINT `page_sections_locked_by_lnk_ifk` FOREIGN KEY (`user_id`) REFERENCES `admin_users` (`id`) ON DELETE CASCADE, CONSTRAINT `page_sections_locked_by_lnk_fk` FOREIGN KEY (`page_section_id`) REFERENCES `page_sections` (`id`) ON DELETE CASCADE, CONSTRAINT `page_sections_locked_by_lnk_ifk` FOREIGN KEY (`user_id`) REFERENCES `admin_users` (`id`) ON DELETE CASCADE);
CREATE INDEX `page_sections_locked_by_lnk_fk` on `page_sections_locked_by_lnk` (`page_section_id`);
CREATE INDEX `page_sections_locked_by_lnk_ifk` on `page_sections_locked_by_lnk` (`user_id`);
CREATE UNIQUE INDEX `page_sections_locked_by_lnk_uq` on `page_sections_locked_by_lnk` (`page_section_id`, `user_id`);
CREATE TABLE IF NOT EXISTS "components_sections_featured_courses_courses_lnk" (`id` integer PRIMARY KEY AUTOINCREMENT NOT NULL, `featured_courses_id` integer NULL, `course_id` integer NULL, `course_ord` float NULL, CONSTRAINT `components_sections_featured_courses_courses_lnk_fk` FOREIGN KEY (`featured_courses_id`) REFERENCES `components_sections_featured_courses` (`id`) ON DELETE CASCADE, CONSTRAINT `components_sections_featured_courses_courses_lnk_ifk` FOREIGN KEY (`course_id`) REFERENCES `courses` (`id`) ON DELETE CASCADE, CONSTRAINT `components_sections_featured_courses_courses_lnk_fk` FOREIGN KEY (`featured_courses_id`) REFERENCES `components_sections_featured_courses` (`id`) ON DELETE CASCADE, CONSTRAINT `components_sections_featured_courses_courses_lnk_ifk` FOREIGN KEY (`course_id`) REFERENCES `courses` (`id`) ON DELETE CASCADE);
CREATE INDEX `components_sections_featured_courses_courses_lnk_fk` on `components_sections_featured_courses_courses_lnk` (`featured_courses_id`);
CREATE INDEX `components_sections_featured_courses_courses_lnk_ifk` on `components_sections_featured_courses_courses_lnk` (`course_id`);
CREATE UNIQUE INDEX `components_sections_featured_courses_courses_lnk_uq` on `components_sections_featured_courses_courses_lnk` (`featured_courses_id`, `course_id`);
CREATE INDEX `components_sections_featured_courses_courses_lnk_ofk` on `components_sections_featured_courses_courses_lnk` (`course_ord`);
CREATE TABLE IF NOT EXISTS "components_sections_faq_sections_faqs_lnk" (`id` integer PRIMARY KEY AUTOINCREMENT NOT NULL, `faq_section_id` integer NULL, `faq_id` integer NULL, `faq_ord` float NULL, CONSTRAINT `components_sections_faq_sections_faqs_lnk_fk` FOREIGN KEY (`faq_section_id`) REFERENCES `components_sections_faq_sections` (`id`) ON DELETE CASCADE, CONSTRAINT `components_sections_faq_sections_faqs_lnk_ifk` FOREIGN KEY (`faq_id`) REFERENCES `faqs` (`id`) ON DELETE CASCADE, CONSTRAINT `components_sections_faq_sections_faqs_lnk_fk` FOREIGN KEY (`faq_section_id`) REFERENCES `components_sections_faq_sections` (`id`) ON DELETE CASCADE, CONSTRAINT `components_sections_faq_sections_faqs_lnk_ifk` FOREIGN KEY (`faq_id`) REFERENCES `faqs` (`id`) ON DELETE CASCADE);
CREATE INDEX `components_sections_faq_sections_faqs_lnk_fk` on `components_sections_faq_sections_faqs_lnk` (`faq_section_id`);
CREATE INDEX `components_sections_faq_sections_faqs_lnk_ifk` on `components_sections_faq_sections_faqs_lnk` (`faq_id`);
CREATE UNIQUE INDEX `components_sections_faq_sections_faqs_lnk_uq` on `components_sections_faq_sections_faqs_lnk` (`faq_section_id`, `faq_id`);
CREATE INDEX `components_sections_faq_sections_faqs_lnk_ofk` on `components_sections_faq_sections_faqs_lnk` (`faq_ord`);
CREATE TABLE IF NOT EXISTS "components_shared_testimonial_items" (`id` integer PRIMARY KEY AUTOINCREMENT NOT NULL, `author_name` varchar(255) NULL, `rating` integer NULL, `author_initial` varchar(255) NULL, `review_date` varchar(255) NULL, `review_text` text NULL, `course_taken` varchar(255) NULL, `review_platform` varchar(255) NULL, `is_verified` boolean NULL, `has_read_more` boolean NULL, `read_more_link` varchar(255) NULL);
CREATE TABLE IF NOT EXISTS "components_shared_skill_items" (`id` integer PRIMARY KEY AUTOINCREMENT NOT NULL, `title` varchar(255) NULL, `description` text NULL);
CREATE TABLE IF NOT EXISTS "components_shared_learning_steps" (`id` integer PRIMARY KEY AUTOINCREMENT NOT NULL, `step_number` integer NULL, `title` varchar(255) NULL, `description` text NULL, `duration` varchar(255) NULL);
CREATE TABLE IF NOT EXISTS "components_sections_featured_courses" (`id` integer PRIMARY KEY AUTOINCREMENT NOT NULL, `section_title` varchar(255) NULL, `section_description` text NULL, `section_subtitle` varchar(255) NULL, `show_all_courses_button` boolean NULL, `all_courses_button_text` varchar(255) NULL);
CREATE TABLE IF NOT EXISTS "components_sections_alumni_reviews" (`id` integer PRIMARY KEY AUTOINCREMENT NOT NULL, `section_title` varchar(255) NULL, `section_subtitle` varchar(255) NULL, `section_description` text NULL, `overall_rating` float NULL, `trustpilot_rating` float NULL, `google_rating` float NULL, `show_more_reviews_button` boolean NULL, `more_reviews_button_text` varchar(255) NULL, `more_reviews_button_link` varchar(255) NULL);
CREATE TABLE IF NOT EXISTS "about_pages" (`id` integer PRIMARY KEY AUTOINCREMENT NOT NULL, `document_id` varchar(255) NULL, `hero_title` varchar(255) NULL, `hero_subtitle` varchar(255) NULL, `mission_title` varchar(255) NULL, `mission_description` text NULL, `vision_title` varchar(255) NULL, `vision_description` text NULL, `values` json NULL, `created_at` datetime NULL, `updated_at` datetime NULL, `published_at` datetime NULL, `created_by_id` integer NULL, `updated_by_id` integer NULL, `locale` varchar(255) NULL, CONSTRAINT `about_pages_created_by_id_fk` FOREIGN KEY (`created_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL, CONSTRAINT `about_pages_updated_by_id_fk` FOREIGN KEY (`updated_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL, CONSTRAINT `about_pages_created_by_id_fk` FOREIGN KEY (`created_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL, CONSTRAINT `about_pages_updated_by_id_fk` FOREIGN KEY (`updated_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL);
CREATE INDEX `about_pages_documents_idx` on `about_pages` (`document_id`, `locale`, `published_at`);
CREATE INDEX `about_pages_created_by_id_fk` on `about_pages` (`created_by_id`);
CREATE INDEX `about_pages_updated_by_id_fk` on `about_pages` (`updated_by_id`);
CREATE TABLE IF NOT EXISTS "blog_posts" (`id` integer PRIMARY KEY AUTOINCREMENT NOT NULL, `document_id` varchar(255) NULL, `title` varchar(255) NULL, `slug` varchar(255) NULL, `excerpt` text NULL, `content` text NULL, `author` varchar(255) NULL, `category` varchar(255) NULL, `published_at` datetime NULL, `created_at` datetime NULL, `updated_at` datetime NULL, `created_by_id` integer NULL, `updated_by_id` integer NULL, `locale` varchar(255) NULL, CONSTRAINT `blog_posts_created_by_id_fk` FOREIGN KEY (`created_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL, CONSTRAINT `blog_posts_updated_by_id_fk` FOREIGN KEY (`updated_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL, CONSTRAINT `blog_posts_created_by_id_fk` FOREIGN KEY (`created_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL, CONSTRAINT `blog_posts_updated_by_id_fk` FOREIGN KEY (`updated_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL);
CREATE INDEX `blog_posts_documents_idx` on `blog_posts` (`document_id`, `locale`, `published_at`);
CREATE INDEX `blog_posts_created_by_id_fk` on `blog_posts` (`created_by_id`);
CREATE INDEX `blog_posts_updated_by_id_fk` on `blog_posts` (`updated_by_id`);
CREATE TABLE IF NOT EXISTS "career_resources" (`id` integer PRIMARY KEY AUTOINCREMENT NOT NULL, `document_id` varchar(255) NULL, `title` varchar(255) NULL, `description` text NULL, `type` varchar(255) NULL, `download_url` varchar(255) NULL, `created_at` datetime NULL, `updated_at` datetime NULL, `published_at` datetime NULL, `created_by_id` integer NULL, `updated_by_id` integer NULL, `locale` varchar(255) NULL, CONSTRAINT `career_resources_created_by_id_fk` FOREIGN KEY (`created_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL, CONSTRAINT `career_resources_updated_by_id_fk` FOREIGN KEY (`updated_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL, CONSTRAINT `career_resources_created_by_id_fk` FOREIGN KEY (`created_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL, CONSTRAINT `career_resources_updated_by_id_fk` FOREIGN KEY (`updated_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL);
CREATE INDEX `career_resources_documents_idx` on `career_resources` (`document_id`, `locale`, `published_at`);
CREATE INDEX `career_resources_created_by_id_fk` on `career_resources` (`created_by_id`);
CREATE INDEX `career_resources_updated_by_id_fk` on `career_resources` (`updated_by_id`);
CREATE TABLE IF NOT EXISTS "contact_pages" (`id` integer PRIMARY KEY AUTOINCREMENT NOT NULL, `document_id` varchar(255) NULL, `phone` varchar(255) NULL, `email` varchar(255) NULL, `address` text NULL, `office_hours` varchar(255) NULL, `map_url` varchar(255) NULL, `created_at` datetime NULL, `updated_at` datetime NULL, `published_at` datetime NULL, `created_by_id` integer NULL, `updated_by_id` integer NULL, `locale` varchar(255) NULL, CONSTRAINT `contact_pages_created_by_id_fk` FOREIGN KEY (`created_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL, CONSTRAINT `contact_pages_updated_by_id_fk` FOREIGN KEY (`updated_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL, CONSTRAINT `contact_pages_created_by_id_fk` FOREIGN KEY (`created_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL, CONSTRAINT `contact_pages_updated_by_id_fk` FOREIGN KEY (`updated_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL);
CREATE INDEX `contact_pages_documents_idx` on `contact_pages` (`document_id`, `locale`, `published_at`);
CREATE INDEX `contact_pages_created_by_id_fk` on `contact_pages` (`created_by_id`);
CREATE INDEX `contact_pages_updated_by_id_fk` on `contact_pages` (`updated_by_id`);
CREATE TABLE IF NOT EXISTS "job_postings" (`id` integer PRIMARY KEY AUTOINCREMENT NOT NULL, `document_id` varchar(255) NULL, `title` varchar(255) NULL, `company` varchar(255) NULL, `location` varchar(255) NULL, `type` varchar(255) NULL, `description` text NULL, `requirements` json NULL, `apply_url` varchar(255) NULL, `created_at` datetime NULL, `updated_at` datetime NULL, `published_at` datetime NULL, `created_by_id` integer NULL, `updated_by_id` integer NULL, `locale` varchar(255) NULL, CONSTRAINT `job_postings_created_by_id_fk` FOREIGN KEY (`created_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL, CONSTRAINT `job_postings_updated_by_id_fk` FOREIGN KEY (`updated_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL, CONSTRAINT `job_postings_created_by_id_fk` FOREIGN KEY (`created_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL, CONSTRAINT `job_postings_updated_by_id_fk` FOREIGN KEY (`updated_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL);
CREATE INDEX `job_postings_documents_idx` on `job_postings` (`document_id`, `locale`, `published_at`);
CREATE INDEX `job_postings_created_by_id_fk` on `job_postings` (`created_by_id`);
CREATE INDEX `job_postings_updated_by_id_fk` on `job_postings` (`updated_by_id`);
CREATE TABLE IF NOT EXISTS "pricing_plans" (`id` integer PRIMARY KEY AUTOINCREMENT NOT NULL, `document_id` varchar(255) NULL, `name` varchar(255) NULL, `price` float NULL, `period` varchar(255) NULL, `description` text NULL, `features` json NULL, `featured` boolean NULL, `cta_text` varchar(255) NULL, `order` integer NULL, `created_at` datetime NULL, `updated_at` datetime NULL, `published_at` datetime NULL, `created_by_id` integer NULL, `updated_by_id` integer NULL, `locale` varchar(255) NULL, CONSTRAINT `pricing_plans_created_by_id_fk` FOREIGN KEY (`created_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL, CONSTRAINT `pricing_plans_updated_by_id_fk` FOREIGN KEY (`updated_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL, CONSTRAINT `pricing_plans_created_by_id_fk` FOREIGN KEY (`created_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL, CONSTRAINT `pricing_plans_updated_by_id_fk` FOREIGN KEY (`updated_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL);
CREATE INDEX `pricing_plans_documents_idx` on `pricing_plans` (`document_id`, `locale`, `published_at`);
CREATE INDEX `pricing_plans_created_by_id_fk` on `pricing_plans` (`created_by_id`);
CREATE INDEX `pricing_plans_updated_by_id_fk` on `pricing_plans` (`updated_by_id`);
CREATE TABLE IF NOT EXISTS "teachers" (`id` integer PRIMARY KEY AUTOINCREMENT NOT NULL, `document_id` varchar(255) NULL, `name` varchar(255) NULL, `role` varchar(255) NULL, `bio` text NULL, `expertise` json NULL, `linkedin` varchar(255) NULL, `twitter` varchar(255) NULL, `order` integer NULL, `created_at` datetime NULL, `updated_at` datetime NULL, `published_at` datetime NULL, `created_by_id` integer NULL, `updated_by_id` integer NULL, `locale` varchar(255) NULL, CONSTRAINT `teachers_created_by_id_fk` FOREIGN KEY (`created_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL, CONSTRAINT `teachers_updated_by_id_fk` FOREIGN KEY (`updated_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL, CONSTRAINT `teachers_created_by_id_fk` FOREIGN KEY (`created_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL, CONSTRAINT `teachers_updated_by_id_fk` FOREIGN KEY (`updated_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL);
CREATE INDEX `teachers_documents_idx` on `teachers` (`document_id`, `locale`, `published_at`);
CREATE INDEX `teachers_created_by_id_fk` on `teachers` (`created_by_id`);
CREATE INDEX `teachers_updated_by_id_fk` on `teachers` (`updated_by_id`);
CREATE TABLE IF NOT EXISTS "courses" (`id` integer PRIMARY KEY AUTOINCREMENT NOT NULL, `document_id` varchar(255) NULL, `title` varchar(255) NULL, `description` text NULL, `price` float NULL, `duration` varchar(255) NULL, `lessons` integer NULL, `rating` float NULL, `category` varchar(255) NULL, `created_at` datetime NULL, `updated_at` datetime NULL, `published_at` datetime NULL, `created_by_id` integer NULL, `updated_by_id` integer NULL, `locale` varchar(255) NULL, `visible` boolean NULL, CONSTRAINT `courses_created_by_id_fk` FOREIGN KEY (`created_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL, CONSTRAINT `courses_updated_by_id_fk` FOREIGN KEY (`updated_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL, CONSTRAINT `courses_created_by_id_fk` FOREIGN KEY (`created_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL, CONSTRAINT `courses_updated_by_id_fk` FOREIGN KEY (`updated_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL);
CREATE INDEX `courses_documents_idx` on `courses` (`document_id`, `locale`, `published_at`);
CREATE INDEX `courses_created_by_id_fk` on `courses` (`created_by_id`);
CREATE INDEX `courses_updated_by_id_fk` on `courses` (`updated_by_id`);
CREATE TABLE IF NOT EXISTS "simple_tests" (`id` integer PRIMARY KEY AUTOINCREMENT NOT NULL, `document_id` varchar(255) NULL, `name` varchar(255) NULL, `created_at` datetime NULL, `updated_at` datetime NULL, `published_at` datetime NULL, `created_by_id` integer NULL, `updated_by_id` integer NULL, `locale` varchar(255) NULL, CONSTRAINT `simple_tests_created_by_id_fk` FOREIGN KEY (`created_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL, CONSTRAINT `simple_tests_updated_by_id_fk` FOREIGN KEY (`updated_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL, CONSTRAINT `simple_tests_created_by_id_fk` FOREIGN KEY (`created_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL, CONSTRAINT `simple_tests_updated_by_id_fk` FOREIGN KEY (`updated_by_id`) REFERENCES `admin_users` (`id`) ON DELETE SET NULL);
CREATE INDEX `simple_tests_documents_idx` on `simple_tests` (`document_id`, `locale`, `published_at`);
CREATE INDEX `simple_tests_created_by_id_fk` on `simple_tests` (`created_by_id`);
CREATE INDEX `simple_tests_updated_by_id_fk` on `simple_tests` (`updated_by_id`);
