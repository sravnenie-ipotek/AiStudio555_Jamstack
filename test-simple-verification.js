#!/usr/bin/env node

const { chromium } = require('playwright');

async function testSimpleVerification() {
    console.log('üéØ Simple Verification: Hebrew FAQ Translation');

    const browser = await chromium.launch({
        headless: false,
        slowMo: 500
    });

    const page = await browser.newPage();

    try {
        console.log('\nüì± Loading Hebrew page...');
        await page.goto('http://localhost:3005/he/index.html');
        await page.waitForLoadState('networkidle');

        // Wait for auto-translation
        console.log('‚è≥ Waiting for auto-translation (7 seconds)...');
        await page.waitForTimeout(7000);

        // Check for any FAQ-related elements
        const faqElements = await page.evaluate(() => {
            const allElements = [];

            // Check for various FAQ selectors
            const selectors = [
                '.faq-question',
                '[class*="faq"]',
                'h3:contains("◊©◊ú◊ò◊ï ◊ë-AI ◊ï◊ò◊õ◊†◊ï◊ú◊ï◊í◊ô◊î")',
                '*:contains("◊ß◊ï◊®◊°◊ô◊ù ◊û◊ï◊¶◊¢◊ô◊ù")',
                '*:contains("◊û◊©◊ö ◊î◊ß◊ï◊®◊°◊ô◊ù")'
            ];

            // Manual search for FAQ content
            const allFAQElements = [];
            document.querySelectorAll('*').forEach(el => {
                const text = el.textContent ? el.textContent.trim() : '';
                if (text === '◊ß◊ï◊®◊°◊ô◊ù ◊û◊ï◊¶◊¢◊ô◊ù' ||
                    text === '◊û◊©◊ö ◊î◊ß◊ï◊®◊°◊ô◊ù' ||
                    text === '◊™◊¢◊ï◊ì◊ï◊™ ◊ï◊î◊°◊û◊õ◊î' ||
                    text === '◊™◊û◊ô◊õ◊î ◊ë◊ß◊®◊ô◊ô◊®◊î' ||
                    text === '◊ì◊®◊ô◊©◊ï◊™ ◊ß◊ì◊ù' ||
                    text === '◊ú◊û◊ô◊ì◊î ◊ë◊ß◊¶◊ë ◊ê◊ô◊©◊ô' ||
                    text === '◊©◊ú◊ò◊ï ◊ë-AI ◊ï◊ò◊õ◊†◊ï◊ú◊ï◊í◊ô◊î') {
                    allFAQElements.push({
                        tag: el.tagName,
                        class: el.className || 'no-class',
                        text: text,
                        isTranslated: text !== '◊©◊ú◊ò◊ï ◊ë-AI ◊ï◊ò◊õ◊†◊ï◊ú◊ï◊í◊ô◊î'
                    });
                }
            });

            return allFAQElements;
        });

        console.log('\nüìã FAQ-Related Elements Found:');
        faqElements.forEach((el, i) => {
            console.log(`  ${i + 1}. ${el.tag}.${el.class}: "${el.text}" ${el.isTranslated ? '‚úÖ' : '‚ùå'}`);
        });

        const translatedElements = faqElements.filter(el => el.isTranslated);
        const genericElements = faqElements.filter(el => !el.isTranslated);

        console.log('\nüéØ VERIFICATION RESULTS:');
        console.log(`- Total FAQ Elements Found: ${faqElements.length}`);
        console.log(`- Translated FAQ Elements: ${translatedElements.length}`);
        console.log(`- Generic Placeholders Remaining: ${genericElements.length}`);
        console.log(`- Translation Success: ${translatedElements.length > 0 ? 'YES ‚úÖ' : 'NO ‚ùå'}`);

        if (translatedElements.length > 0) {
            console.log('\nüéâ SUCCESS: Auto-translation is working!');
            console.log('   Hebrew FAQ titles are being automatically replaced.');
        }

        if (genericElements.length > 0) {
            console.log('\n‚ö†Ô∏è  Some generic placeholders still remain:');
            genericElements.forEach(el => {
                console.log(`   - ${el.tag}.${el.class}: "${el.text}"`);
            });
        }

        await page.screenshot({ path: 'simple-verification.png' });

    } catch (error) {
        console.error('‚ùå Error:', error);
    }

    await browser.close();
    console.log('\n‚úÖ Simple verification completed!');
}

testSimpleVerification().catch(console.error);